{"version":3,"sources":["../client/game.js"],"names":[],"mappings":"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","file":"game.js","sourcesContent":["class Character extends React.Component {\n    selectChar() {\n        this.props.selectChar(this.props.char);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        var checkList = ['Img', 'Row', 'Col', 'prevRow', 'prevCol', 'selected', 'toDelete', 'turn', 'advice'];\n        for(var i = 0; i < checkList.length; i++){\n            if (this.props.char[checkList[i]] != nextProps.char[checkList[i]]) {\n                return true;\n            }\n        }\n        return this.props.gameTurn != nextProps.gameTurn;\n    }\n\n    render() {\n        const {gameTurn} = this.props;\n        const {Img, Row, Col, prevRow, prevCol, selected, toDelete, turn, advice} = this.props.char;\n        var classes = [\"char-cell\", \"row\"+Row, \"col\"+Col, (advice ? \"advice\":\"\"),\n            (selected ? \"selected\":\"\"), (toDelete?\"cell-remove\":\"\"),\n            (turn == gameTurn - 1 ? \"new\":\"\"), (turn == gameTurn ? \"appear\":\"\")];\n        return <div className={classes.join(\" \")}\n                 onClick={this.selectChar.bind(this)}>\n                <img src={Img} className=\"char\" />\n            </div>\n    }\n}\n\nclass FieldCell extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return false;\n    }\n    moveSelected() {\n        var char = this.props.game.Field.find((char) => {\n            if (char.selected) {\n                return char\n            }\n        });\n        if (char) {\n            if (this.props.tutorialState) {\n                var response = initialTutorialMove[this.props.tutorialState];\n                if (response.Path[0][0] == this.props.row && response.Path[0][1] == this.props.col) {\n                    this.props.moveSelectedTutorial(this.props.game.Id, char, this.props.row, this.props.col, response);\n                }\n            } else {\n                this.props.moveSelected(this.props.game.Id, char, this.props.row, this.props.col);\n            }\n        }\n    }\n\n    render() {\n        const {row, col, game} = this.props;\n        var fieldClasses = [\"fieldCell\"];\n        if (row == 0) {\n            fieldClasses.push('topRow')\n        }\n        if (row == game.Width - 1) {\n            fieldClasses.push('bottomRow')\n        }\n        if (col == 0) {\n            fieldClasses.push('leftCol')\n        }\n        if (col == game.Height - 1) {\n            fieldClasses.push('rightCol')\n        }\n        return <div onClick={this.moveSelected.bind(this)} className={ fieldClasses.join(' ') }></div>\n    }\n}\n\nclass TopGames extends React.Component {\n    render() {\n        const {topGames, getGame} = this.props;\n\n        var nodes = topGames.map((diffNode, i) => {\n            var subGames = diffNode.map((game, j) => {\n                var endDate = new Date(game.EndDate).toLocaleString();\n                var gameTime = Math.round((new Date(game.EndDate) - new Date(game.Date))/1000/60);\n                return <p key={'top' + 'i' + i + 'j' + j} className=\"top-game my-game btn\" onClick={getGame.bind(this, game.Id)}>\n                    {game.UserName ? game.UserName: \"\"} Score: {game.Score} Game: {game.Id} Date: {endDate} Game time: {gameTime} min\n                    </p>\n            });\n            if (diffNode.length) {\n                return <div className=\"top-diff\" key={'topdiff' + 'i' + i}>\n                    <p className=\"top-diff-str\">Difficulty: {i + 1}</p>\n                    {subGames}\n                </div>\n            } else {\n                return \"\"\n            }\n        });\n\n        return <div id=\"topGames\">\n            <h1>Top games:</h1>\n            {nodes}\n        </div>\n    }\n}\n\nclass Game extends React.Component {\n    render() {\n        const {game, selectChar, moveSelected, tutorialState, endTutorial, nextTutorial, moveSelectedTutorial, showTop,\n            topGames, getGame} = this.props;\n        var fieldCell = [];\n        for (var row = 0; row < game.Width; row++) {\n            for (var col = 0; col < game.Height; col++) {\n                fieldCell.push(<FieldCell key={'' + row + col} row={row} col={col}\n                                          game={game} moveSelected={moveSelected}\n                                          tutorialState={tutorialState} moveSelectedTutorial={moveSelectedTutorial}>\n                </FieldCell>)\n            }\n        }\n        var characters = game.Field.map((charData, i) => {\n            return <Character key={charData.Img.slice(-8, -4) + charData.Col + charData.Row} char={charData}\n                              selectChar={selectChar} gameTurn={game.Turn} />\n        });\n        if (showTop) {\n            return <div id=\"game\" className=\"window\">\n                <TopGames topGames={topGames} getGame={getGame}/>\n            </div>\n        } else {\n            return <div id=\"game\" className=\"window\">\n                <Tutorial state={tutorialState} endTutorial={endTutorial} nextTutorial={nextTutorial} game={game} />\n                {fieldCell}\n                {characters}\n            </div>\n        }\n    }\n}"]}