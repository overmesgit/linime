{"version":3,"sources":["../client/menu.js"],"names":[],"mappings":"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","file":"menu.js","sourcesContent":["class Menu extends React.Component {\n    componentDidMount() {\n        $('.my-games-list').perfectScrollbar();\n    }\n\n    createGame(e) {\n        if (!this.props.game.creating) {\n            this.props.createGame(+this.refs.diff.value, this.refs.userName.value);\n        }\n    }\n\n    completeGame(e) {\n        this.props.completeGame(this.props.game.Id);\n    }\n\n    render() {\n        const {myGames, getGame, game, createGameStatus, toggleCreateGame, changeImage, getAdvice, startTutorial} = this.props;\n\n        var gamesNodes = myGames.map((gameId, i) => {\n            return <p key={i} className=\"my-game btn\" onClick={getGame.bind(this, gameId)}>{gameId}</p>\n        });\n\n        var completeNode = \"\";\n        if(game.Score.TotalScore == -1000 && game.Id != 'test') {\n            completeNode = <h2 className=\"menu-content-button btn complete-game\" onClick={this.completeGame.bind(this)}>Give up</h2>\n        }\n\n        var selectedChar = game.Field.filter(field => field.selected);\n\n        return <div id=\"menu\" className=\"window\">\n            <div className=\"menu-content\">\n                <h1>Anime Lines</h1>\n                <h3>Line them all!</h3>\n                <div className=\"game-control\">\n                    <h2 className=\"menu-content-button btn\" onClick={startTutorial}>Tutorial</h2>\n                    <h2 className=\"menu-content-button btn\" onClick={toggleCreateGame}>New game</h2>\n                    <div className={\"difficulty\" + (createGameStatus.hidden ? \" difficulty-hidden\": \"\")}>\n                        <p>Difficulty:</p>\n                        <select className=\"select-style\" ref=\"diff\" defaultValue={\"1\"}>\n                            <option value=\"0\">For normal people</option>\n                            <option value=\"1\">Easy</option>\n                            <option value=\"2\">Normal</option>\n                            <option value=\"3\">Hard</option>\n                            <option value=\"4\">Flappy bird</option>\n                        </select>\n                        <p>MyAnimeList (Optional):</p>\n                        <input className=\"mal-username\" ref=\"userName\"  placeholder=\"MyAnimeList username\"/>\n                        <div className=\"btn create-game\" onClick={this.createGame.bind(this)}>{!game.creating ? \"Create Game\": \"Loading\"}</div>\n                    </div>\n                    {completeNode}\n                    {game.Turn > 0 && game.Id != 'test' ? <h2 className=\"menu-content-button btn btn-green\" onClick={getAdvice.bind(this, game.Id)}>Random advice</h2>: \"\"}\n                    {(selectedChar == 0 || game.Id == 'test') || <h2 className=\"menu-content-button btn\" onClick={changeImage.bind(this, game.Id, selectedChar[0])}>\n                        Change image</h2>}\n                </div>\n                <div className=\"my-games-list\">\n                    <h3>My games:</h3>\n                    {gamesNodes}\n                </div>\n            </div>\n        </div>\n    }\n}"]}